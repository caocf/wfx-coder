<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<#assign className = table.className>
<#assign classNameFirstLower = table.classNameFirstLower>
<#macro namespace>${className}.</#macro>
<mapper namespace="${basepackage}.${module}.dao.${className}Mapper">
    <resultMap id="${className}" type="${basepackage}.${module}.model.${className}Entity">
    <#list table.columns as column>
    	<result property="${column.columnNameLower}" column="${column.sqlName}" jdbcType="<#if column.sqlTypeName=="DATETIME">TIMESTAMP<#elseif column.sqlTypeName=="INT">INTEGER<#else>${column.sqlTypeName}</#if>"/>
    </#list>
    </resultMap>
    
    <sql id="Base_Column_List" >
		<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
    </sql>
    
    <sql id="where">
		<#list table.columns as column>
			<if test="${column.columnNameLower} != null<#if column.sqlTypeName =="TINYINT" || column.sqlTypeName == "INT" || column.sqlTypeName == "SMALLINT"> and ${column.columnNameLower} !=0<#elseif column.sqlTypeName =="VARCHAR"> and ${column.columnNameLower} != ''</#if>">
        	and ${column.sqlName} = ${"#{"}${column.columnNameLower},jdbcType=<#if column.sqlTypeName=="DATETIME">TIMESTAMP<#elseif column.sqlTypeName=="INT">INTEGER<#else>${column.sqlTypeName}</#if>${"}"}
	        </if>
		</#list>
    </sql>
    
    <sql id="set">
    	<#list table.columns as column>
			<if test="${column.columnNameLower} != null ">
        	${column.sqlName} = ${"#{"}${column.columnNameLower},jdbcType=<#if column.sqlTypeName=="DATETIME">TIMESTAMP<#elseif column.sqlTypeName=="INT">INTEGER<#else>${column.sqlTypeName}</#if>${"}"}<#if column_has_next>,</#if>
	        </if>
		</#list>
    </sql>
    
    <select id="getById" resultMap="${className}" parameterType="java.lang.String">
        select 
        <include refid="Base_Column_List"/>
        from ${table.sqlName}
        where id = ${"#{"}id,jdbcType=VARCHAR${"}"}
    </select>
    
    <select id="findPage" parameterType="${basepackage}.${module}.model.${className}Entity" resultMap="${className}">
        select * from ${table.sqlName} where 1=1 
        <include refid="where" />
    </select>
    
    <select id="findPageCount" parameterType="${basepackage}.${module}.model.${className}Entity" resultType="int">
        select count(1) from ${table.sqlName} where 1=1 
        <include refid="where" />
    </select>
    
     <select id="findByPage"  resultMap="${className}">
        select * from ${table.sqlName} where 1=1 
        <include refid="where" />
    </select>
   
    <insert id="insert" parameterType="${basepackage}.${module}.model.${className}Entity">
        insert into ${table.sqlName} (<include refid="Base_Column_List" />)
        values (
        <#list table.columns as column>${column.sqlName} = ${"#{"}${column.columnNameLower},jdbcType=<#if column.sqlTypeName=="DATETIME">TIMESTAMP<#elseif column.sqlTypeName=="INT">INTEGER<#else>${column.sqlTypeName}</#if>${"}"}<#if column_has_next>,</#if></#list>
        )
    </insert>
    
    <delete id="remove" parameterType="java.lang.String" >
        delete from ${table.sqlName}
        where id = ${"#{"}id,jdbcType=VARCHAR${"}"}
    </delete>
    
    <update id="update" parameterType="${basepackage}.${module}.model.${className}Entity" >
        update ${table.sqlName}
        <set>
      	<include refid="set" />
        </set>
        where id = ${"#{"}id,jdbcType=VARCHAR${"}"}
    </update>
</mapper>